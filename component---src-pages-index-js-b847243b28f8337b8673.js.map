{"version":3,"sources":["webpack:///./src/components/charts.js","webpack:///./src/components/bt-power.js","webpack:///./src/components/bt-heartrate.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["lineChartOptions","legend","display","layout","padding","scales","yAxes","gridLines","ticks","beginAtZero","autoSkip","maxTicksLimit","xAxes","LineChart","props","react_default","a","createElement","es","data","width","height","options","BluetoothPower","_this","_Component","call","this","handleCharacteristicValueChanged","event","value","target","getInt16","setState","currentPower","labels","concat","state","datasets","backgroundColor","pointRadius","borderWidth","borderColor","label","componentDidMount","requestBluetoothConnection","navigator","bluetooth","requestDevice","filters","services","then","device","gatt","connect","server","getPrimaryService","service","console","log","getCharacteristic","characteristic","startNotifications","addEventListener","catch","error","render","className","onClick","bind","charts_LineChart","Component","BluetoothHeartRate","getUint8","currentHeartRate","IndexPage","bt_power","bt_heartrate","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","style","margin","maxWidth","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","title","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-b847243b28f8337b8673.js","sourcesContent":["import { Doughnut, Line } from 'react-chartjs-2'\nimport React from 'react'\n\nconst DoughnutChart = props => {\n  return <Doughnut data={props.data} />\n}\n\nlet lineChartOptions = {\n  legend: {\n    display: false,\n  },\n  layout: {\n    padding: 0,\n  },\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: { beginAtZero: true, autoSkip: true, maxTicksLimit: 5 },\n      },\n    ],\n    xAxes: [\n      {\n        ticks: {\n          display: false,\n        },\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n}\n\nconst LineChart = props => {\n  return (\n    <Line\n      data={props.data}\n      width={100}\n      height={20}\n      options={lineChartOptions}\n    />\n  )\n}\n\nexport { DoughnutChart, LineChart }\n","import React, { Component } from 'react'\nimport { LineChart } from './charts'\n\nclass BluetoothPower extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentPower: 0,\n      data: {\n        labels: [],\n        datasets: [\n          {\n            data: [],\n            backgroundColor: 'rgba(245, 166, 35, 0.50)',\n            pointRadius: 0,\n            borderWidth: 2,\n            borderColor: 'rgba(245, 166, 35, 1)',\n            label: 'Power',\n          },\n        ],\n      },\n    }\n  }\n\n  componentDidMount() {}\n\n  handleCharacteristicValueChanged = event => {\n    let value = event.target.value.getInt16(1)\n\n    this.setState({\n      currentPower: value,\n      data: {\n        labels: [...this.state.data.labels, value],\n        datasets: [\n          {\n            data: [...this.state.data.datasets[0].data, value],\n            backgroundColor: 'rgba(245, 166, 35, 0.50)',\n            pointRadius: 0,\n            borderWidth: 2,\n            borderColor: 'rgba(245, 166, 35, 1)',\n            label: 'Power',\n          },\n        ],\n      },\n    })\n  }\n\n  requestBluetoothConnection() {\n    let handleCharacteristicValueChanged = this.handleCharacteristicValueChanged\n\n    navigator.bluetooth\n      .requestDevice({ filters: [{ services: ['cycling_power'] }] })\n      .then(device => {\n        return device.gatt.connect()\n      })\n      .then(server => {\n        return server.getPrimaryService('cycling_power')\n      })\n      .then(service => {\n        console.log('service')\n        return service.getCharacteristic('cycling_power_measurement')\n      })\n      .then(characteristic => characteristic.startNotifications())\n      .then(characteristic => {\n        characteristic.addEventListener(\n          'characteristicvaluechanged',\n          handleCharacteristicValueChanged\n        )\n        console.log('Notifications have been started.')\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"flex justify-between items-center\">\n          <header>\n            <h2>Power</h2>\n            <h1>{this.state.currentPower}</h1>\n          </header>\n          <button\n            className=\"f6 link dim br1 ph3 pv2 mb2 dib white bg-black bn\"\n            onClick={this.requestBluetoothConnection.bind(this)}\n          >\n            Connect Power\n          </button>\n        </div>\n        <div className=\"mv5\">\n          <LineChart data={this.state.data} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BluetoothPower\n","import React, { Component } from 'react'\nimport { LineChart } from './charts'\n\nclass BluetoothHeartRate extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentHeartRate: 0,\n      data: {\n        labels: [],\n        datasets: [\n          {\n            data: [],\n            backgroundColor: 'rgba(245, 35, 35, 0.50)',\n            pointRadius: 0,\n            borderWidth: 2,\n            borderColor: 'rgba(245, 35, 35, 1)',\n            label: 'Heart Rate',\n          },\n        ],\n      },\n    }\n  }\n\n  componentDidMount() {}\n\n  handleCharacteristicValueChanged = event => {\n    let value = event.target.value.getUint8(1)\n\n    this.setState({\n      currentHeartRate: value,\n      data: {\n        labels: [...this.state.data.labels, value],\n        datasets: [\n          {\n            data: [...this.state.data.datasets[0].data, value],\n            backgroundColor: 'rgba(245, 35, 35, 0.50)',\n            pointRadius: 0,\n            borderWidth: 2,\n            borderColor: 'rgba(245, 35, 35, 1)',\n            label: 'Heart Rate',\n          },\n        ],\n      },\n    })\n  }\n\n  requestBluetoothConnection() {\n    let handleCharacteristicValueChanged = this.handleCharacteristicValueChanged\n\n    navigator.bluetooth\n      .requestDevice({ filters: [{ services: ['heart_rate'] }] })\n      .then(device => {\n        return device.gatt.connect()\n      })\n      .then(server => {\n        return server.getPrimaryService('heart_rate')\n      })\n      .then(service => {\n        console.log('service')\n        return service.getCharacteristic('heart_rate_measurement')\n      })\n      .then(characteristic => characteristic.startNotifications())\n      .then(characteristic => {\n        characteristic.addEventListener(\n          'characteristicvaluechanged',\n          handleCharacteristicValueChanged\n        )\n        console.log('Notifications have been started.')\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"flex justify-between items-center\">\n          <header>\n            <h2>Heart Rate</h2>\n            <h1>{this.state.currentHeartRate}</h1>\n          </header>\n          <button\n            className=\"f6 link dim br1 ph3 pv2 mb2 dib white bg-black bn\"\n            onClick={this.requestBluetoothConnection.bind(this)}\n          >\n            Connect Heart Rate\n          </button>\n        </div>\n        <div className=\"mv5\">\n          <LineChart data={this.state.data} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BluetoothHeartRate\n","import React from 'react'\n\nimport Layout from '../components/layout'\nimport BluetoothPower from '../components/bt-power'\nimport BluetoothHeartRate from '../components/bt-heartrate'\n\nconst IndexPage = () => (\n  <Layout>\n    <BluetoothPower />\n    <BluetoothHeartRate />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div className=\"bg-black pv3 mb4\">\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          className=\"sans-serif\"\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}